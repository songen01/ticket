export const aleoHelper = ()=>{
    const remoteProgram = "program aleo_ticket.aleo;\n\nrecord Ticket:\n    owner as address.private;\n    gates as u64.private;\n    name as field.private;\n    ticket_num as u64.private;\n    ticket_price as u64.private;\n    start_time as u64.private;\n    end_time as u64.private;\n    ticket_url1 as field.private;\n    ticket_url2 as field.private;\n    ticket_url3 as field.private;\n    ticket_url4 as field.private;\n\nmapping ticket_num:\n    key left as field.public;\n    value right as u64.public;\n\nmapping ticket_price:\n    key left as field.public;\n    value right as u64.public;\n\nmapping start_time:\n    key left as field.public;\n    value right as u64.public;\n\nmapping end_time:\n    key left as field.public;\n    value right as u64.public;\n\nmapping ticket_url:\n    key left as field.public;\n    value right as field.public;\n\nfunction create_ticket:\n    input r0 as field.public;\n    input r1 as u64.public;\n    input r2 as u64.public;\n    input r3 as u64.public;\n    input r4 as u64.public;\n    input r5 as field.public;\n    gt r1 0u64 into r6;\n    assert.eq r6 true ;\n   finalize r0 r1 r2 r3 r4 r5;\n\nfinalize create_ticket:\n    input r0 as field.public;\n    input r1 as u64.public;\n    input r2 as u64.public;\n    input r3 as u64.public;\n    input r4 as u64.public;\n    input r5 as field.public;\n    set r1 into ticket_num[r0];\n    set r2 into ticket_price[r0];\n    set r3 into start_time[r0];\n    set r4 into end_time[r0];\n    set r5 into ticket_url[r0];\n\nfunction mint_public:\n    input r0 as address.public;\n    input r1 as field.public;\n    input r2 as u64.public;\n    input r3 as u64.public;\n    input r4 as u64.public;\n    input r5 as u64.public;\n    input r6 as field.public;\n    input r7 as field.public;\n    input r8 as field.public;\n    input r9 as field.public;\n    input r10 as u64.private;\n    lt r4 r10 into r11;\n    assert.eq r11 true ;\n    lt r10 r5 into r12;\n    assert.eq r12 true ;\n    cast r0 0u64 r1 r2 r3 r4 r5 r6 r7 r8 r9 into r13 as Ticket.record;\n    output r13 as Ticket.record;\n   finalize r1;\n\nfinalize mint_public:\n    input r0 as field.public;\n    get ticket_num[r0] into r1;\n    sub r1 1u64 into r2;\n    set r2 into ticket_num[r0];\n\nfunction mint_private:\n    input r0 as address.private;\n    input r1 as field.private;\n    input r2 as u64.private;\n    input r3 as u64.private;\n    input r4 as u64.private;\n    input r5 as u64.private;\n    input r6 as field.public;\n    input r7 as field.public;\n    input r8 as field.public;\n    input r9 as field.public;\n    input r10 as u64.private;\n    lt r4 r10 into r11;\n    assert.eq r11 true ;\n    lt r10 r5 into r12;\n    assert.eq r12 true ;\n    cast r0 0u64 r1 r2 r3 r4 r5 r6 r7 r8 r9 into r13 as Ticket.record;\n    output r13 as Ticket.record;\n   finalize r1;\n\nfinalize mint_private:\n    input r0 as field.public;\n    get ticket_num[r0] into r1;\n    sub r1 1u64 into r2;\n    set r2 into ticket_num[r0];\n\nfunction transfer_public:\n    input r0 as Ticket.record;\n    input r1 as address.public;\n    assert.eq self.caller r0.owner ;\n    cast r1 r0.gates r0.name r0.ticket_num r0.ticket_price r0.start_time r0.end_time r0.ticket_url1 r0.ticket_url2 r0.ticket_url3 r0.ticket_url4 into r2 as Ticket.record;\n    output r2 as Ticket.record;\n\nfunction transfer_private:\n    input r0 as Ticket.record;\n    input r1 as address.private;\n    assert.eq self.caller r0.owner ;\n    cast r1 r0.gates r0.name r0.ticket_num r0.ticket_price r0.start_time r0.end_time r0.ticket_url1 r0.ticket_url2 r0.ticket_url3 r0.ticket_url4 into r2 as Ticket.record;\n    output r2 as Ticket.record;\n\nfunction transfer_private_to_public:\n    input r0 as Ticket.record;\n    input r1 as address.public;\n    assert.eq self.caller r0.owner ;\n    cast r1 r0.gates r0.name r0.ticket_num r0.ticket_price r0.start_time r0.end_time r0.ticket_url1 r0.ticket_url2 r0.ticket_url3 r0.ticket_url4 into r2 as Ticket.record;\n    output r2 as Ticket.record;\n\nfunction transfer_public_to_private:\n    input r0 as Ticket.record;\n    input r1 as address.private;\n    assert.eq self.caller r0.owner ;\n    cast r1 r0.gates r0.name r0.ticket_num r0.ticket_price r0.start_time r0.end_time r0.ticket_url1 r0.ticket_url2 r0.ticket_url3 r0.ticket_url4 into r2 as Ticket.record;\n    output r2 as Ticket.record;\n"
    const aleoFunction = "create_public_identifier";
    const inputs = [
      "",
      "777field",
      "777field",
      "777field",
      "777field",
      "777field",
    ];
    const privateKey = "";
    const fee = 0.1;
    const feeRecord =""
    const url = "https://vm.aleo.org/api";
    return {remoteProgram,aleoFunction,inputs,privateKey,fee,feeRecord,url}
}